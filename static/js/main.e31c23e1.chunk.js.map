{"version":3,"sources":["components/NoResult/NoResult.module.css","services/PicturesApi.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/NoResult/oops.jpeg","components/NoResult/NoResult.js","App.js","helpers/scrollPageDown.js","index.js"],"names":["module","exports","API_KEY","axios","defaults","baseURL","fetchPictures","query","a","page","get","hits","data","console","log","message","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","e","preventDefault","trim","toast","error","position","onChange","target","value","toLowerCase","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","image","onOpenModal","onClick","src","webformatURL","alt","tags","ImageGallery","images","map","el","id","Button","modalRoot","document","querySelector","Modal","onClose","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","currentTarget","NoResult","text","role","s","Wrapper","errorImage","width","Text","App","setPage","setImages","loading","setLoading","showModal","setShowModal","largeImage","setLargeImage","setError","fetchGallery","request","length","prev","toggleModal","autoClose","color","height","scrollTo","top","documentElement","scrollHeight","behavior","largeImageURL","onLoad","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,yB,8KCCvDC,EAAU,qCAChBC,IAAMC,SAASC,QAAU,2BAEzB,IAAMC,EAAa,uCAAG,WAAOC,GAAP,+BAAAC,EAAA,6DAAcC,EAAd,+BAAqB,EAArB,kBAIJN,IAAMO,IAAN,aACAH,EADA,iBACcE,EADd,gBAC0BP,EAD1B,yDAJI,uBAGFS,EAHE,EAGVC,KAAQD,KAHE,kBAOPA,GAPO,gCASdE,QAAQC,IAAI,KAAMC,SATJ,yDAAH,sD,4BCDJ,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAChC,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAmBA,OACI,wBAAQC,UAAU,YAAlB,SACI,uBAAMA,UAAU,aAAaJ,SAfhB,SAAAK,GAGjB,GAFAA,EAAEC,iBAEyB,KAAvBJ,EAAYK,OACZ,OAAOC,IAAMC,MAAM,oCAAqC,CACpDC,SAAU,aAIlBV,EAASE,GACTC,EAAe,KAKX,UACI,uBACIQ,SArBgB,SAAAN,GAC5BF,EAAeE,EAAEO,OAAOC,MAAMC,gBAqBlBV,UAAU,mBACVW,KAAK,OACLC,aAAa,MACbC,WAAS,EACTJ,MAAOX,EACPgB,YAAY,6BAEhB,wBAAQH,KAAK,SAASX,UAAU,oBAAhC,SACI,sBAAMA,UAAU,0BAAhB,2BCnCL,SAASe,EAAT,GAAmD,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YAC9C,OACI,qBACIC,QAAS,kBAAMD,EAAYD,IAC3BG,IAAKH,EAAMI,aACXC,IAAKL,EAAMM,KACXtB,UAAU,2BCLP,SAASuB,EAAT,GAAgD,IAAxBC,EAAuB,EAAvBA,OAAQP,EAAe,EAAfA,YAC3C,OACI,oBAAIjB,UAAU,eAAd,SACKwB,EAAOC,KAAI,SAAAC,GAAE,OACV,oBAAI1B,UAAU,mBAAd,SACI,cAACe,EAAD,CAAkBC,MAAOU,EAAIT,YAAaA,KADRS,EAAGC,SCL1C,SAASC,EAAT,GAA8B,IAAZV,EAAW,EAAXA,QAC7B,OACI,wBAAQlB,UAAU,SAASW,KAAK,SAASO,QAASA,EAAlD,uBCAR,IAAMW,EAAYC,SAASC,cAAc,eAE1B,SAASC,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACrCC,qBAAU,WACN,IAAMC,EAAgB,SAAAnC,GACH,WAAXA,EAAEoC,MACFJ,KAIR,OADAK,OAAOC,iBAAiB,UAAWH,GAC5B,WACHE,OAAOE,oBAAoB,UAAWJ,MAE3C,CAACH,IAQJ,OAAOQ,uBACH,qBAAKzC,UAAU,UAAUkB,QAPD,SAAAjB,GACpBA,EAAEyC,gBAAkBzC,EAAEO,QACtByB,KAKJ,SACI,qBAAKjC,UAAU,QAAf,SAAwBkC,MAE5BL,GC7BO,UAA0B,kC,iBCI1B,SAASc,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAC/B,OACI,sBAAKC,KAAK,QAAQ7C,UAAW8C,IAAEC,QAA/B,UACI,qBAAK5B,IAAK6B,EAAYC,MAAM,MAAM5B,IAAI,WACtC,mBAAGuB,KAAMA,EAAM5C,UAAW8C,IAAEI,KAA5B,SACKN,OCMF,SAASO,IACpB,MAAsCtD,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOT,EAAP,KAAagE,EAAb,KACA,EAA4BvD,mBAAS,IAArC,mBAAO2B,EAAP,KAAe6B,EAAf,KACA,EAA8BxD,oBAAS,GAAvC,mBAAOyD,EAAP,KAAgBC,EAAhB,KACA,EAAkC1D,oBAAS,GAA3C,mBAAO2D,EAAP,KAAkBC,EAAlB,KACA,EAAoC5D,mBAAS,IAA7C,mBAAO6D,EAAP,KAAmBC,EAAnB,KACA,EAA0B9D,mBAAS,MAAnC,mBAAOQ,EAAP,KAAcuD,EAAd,KAEAzB,qBAAU,WACN,GAAKrC,EAAL,CAGA,IAAM+D,EAAY,uCAAG,4BAAA1E,EAAA,+EAESF,EAAca,EAAaV,GAFpC,UAGU,KADjB0E,EAFO,QAGDC,OAHC,yCAIFH,EAAS,6BAAD,OACkB9D,EADlB,OAJN,OAQbuD,GAAU,SAAAW,GAAI,4BAAQA,GAAR,YAAiBF,OARlB,gDAUbF,EAAS,oCAVI,yBAYbL,GAAW,GAZE,4EAAH,qDAelBM,OACD,CAACzE,EAAMU,IAEV,IAmBMmE,EAAc,kBAAMR,GAAcD,IAIxC,OACI,qCACI,cAAC,IAAD,CAAgBU,UAAW,MAE3B,cAACvE,EAAD,CAAWC,SA3BO,SAAAE,GACtBC,EAAeD,GACfsD,EAAQ,GACRC,EAAU,IACVO,EAAS,MACTL,GAAW,MAuBNlD,GAAS,cAACsC,EAAD,CAAUC,KAAMvC,IACzBiD,GACG,cAAC,IAAD,CACItD,UAAU,UACVW,KAAK,UACLwD,MAAM,UACNC,OAAQ,IACRnB,MAAO,MAGdzB,EAAOuC,OAAS,IAAM1D,GACnB,cAACkB,EAAD,CAAcC,OAAQA,EAAQP,YA/BlB,SAAAyC,GACpBC,EAAcD,GACdO,QAgCMX,GAAW9B,EAAOuC,OAAS,IAAM1D,GAC/B,cAACuB,EAAD,CAAQV,QA9BM,WC1D1BoB,OAAO+B,SAAS,CACZC,IAAKxC,SAASyC,gBAAgBC,aAC9BC,SAAU,WD0DVlB,GAAW,GACXH,GAAQ,SAAAY,GAAI,OAAIA,EAAO,QA8BlBR,GACG,eAACxB,EAAD,CAAOC,QAASgC,EAAhB,UACKX,GACG,cAAC,IAAD,CACItD,UAAU,UACVW,KAAK,UACLwD,MAAM,UACNC,OAAQ,IACRnB,MAAO,MAGf,qBACI9B,IAAKuC,EAAWgB,cAChBrD,IAAKqC,EAAWpC,KAChBqD,OAvCM,kBAAMpB,GAAW,Y,YE5D/CqB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC3B,EAAD,MAEJrB,SAASiD,eAAe,W","file":"static/js/main.e31c23e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"NoResult_Wrapper__3aZY_\",\"Text\":\"NoResult_Text__MCXcA\"};","import axios from 'axios';\n\nconst API_KEY = '23121091-79cfae32e8a9d261b4a6138dc';\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nconst fetchPictures = async (query, page = 1) => {\n    try {\n        const {\n            data: { hits },\n        } = await axios.get(\n            `?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n        );\n        return hits;\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\nexport { fetchPictures };\n// https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ onSubmit }) {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const handleSearchQueryChange = e => {\n        setSearchQuery(e.target.value.toLowerCase());\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (searchQuery.trim() === '') {\n            return toast.error('Please,enter the correct request!', {\n                position: 'top-left',\n            });\n        }\n\n        onSubmit(searchQuery);\n        setSearchQuery('');\n    };\n\n    return (\n        <header className=\"Searchbar\">\n            <form className=\"SearchForm\" onSubmit={handleSubmit}>\n                <input\n                    onChange={handleSearchQueryChange}\n                    className=\"SearchForm-input\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    value={searchQuery}\n                    placeholder=\"Search images and photos\"\n                />\n                <button type=\"submit\" className=\"SearchForm-button\">\n                    <span className=\"SearchForm-button-label\">Search</span>\n                </button>\n            </form>\n        </header>\n    );\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ image, onOpenModal }) {\n    return (\n        <img\n            onClick={() => onOpenModal(image)}\n            src={image.webformatURL}\n            alt={image.tags}\n            className=\"ImageGalleryItem-image\"\n        />\n    );\n}\n\nImageGalleryItem.propTypes = {\n    image: PropTypes.object.isRequired,\n    onOpenModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem';\n\nexport default function ImageGallery({ images, onOpenModal }) {\n    return (\n        <ul className=\"ImageGallery\">\n            {images.map(el => (\n                <li className=\"ImageGalleryItem\" key={el.id}>\n                    <ImageGalleryItem image={el} onOpenModal={onOpenModal} />\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nImageGallery.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n    onOpenModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n    return (\n        <button className=\"Button\" type=\"button\" onClick={onClick}>\n            Load more\n        </button>\n    );\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n    useEffect(() => {\n        const handleKeyDown = e => {\n            if (e.code === 'Escape') {\n                onClose();\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [onClose]);\n\n    const handleBackdropClick = e => {\n        if (e.currentTarget === e.target) {\n            onClose();\n        }\n    };\n\n    return createPortal(\n        <div className=\"Overlay\" onClick={handleBackdropClick}>\n            <div className=\"Modal\">{children}</div>\n        </div>,\n        modalRoot,\n    );\n}\nModal.propTypes = {\n    children: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/oops.7a0c2fd0.jpeg\";","import errorImage from './oops.jpeg';\nimport s from './NoResult.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function NoResult({ text }) {\n    return (\n        <div role=\"alert\" className={s.Wrapper}>\n            <img src={errorImage} width=\"550\" alt=\"no_res\" />\n            <p text={text} className={s.Text}>\n                {text}\n            </p>\n        </div>\n    );\n}\nNoResult.propTypes = {\n    text: PropTypes.string.isRequired,\n};\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { fetchPictures } from './services/PicturesApi';\nimport scrollPageDown from './helpers/scrollPageDown';\nimport Loader from 'react-loader-spinner';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport NoResult from './components/NoResult';\n\nexport default function App() {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [page, setPage] = useState(1);\n    const [images, setImages] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [largeImage, setLargeImage] = useState({});\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (!searchQuery) {\n            return;\n        }\n        const fetchGallery = async () => {\n            try {\n                const request = await fetchPictures(searchQuery, page);\n                if (request.length === 0) {\n                    return setError(\n                        `No results were found for ${searchQuery}!`,\n                    );\n                }\n                setImages(prev => [...prev, ...request]);\n            } catch (error) {\n                setError('Something went wrong. Try again.');\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchGallery();\n    }, [page, searchQuery]);\n\n    const handlerFormSubmit = searchQuery => {\n        setSearchQuery(searchQuery);\n        setPage(1);\n        setImages([]);\n        setError(null);\n        setLoading(true);\n    };\n\n    const handleOpenModal = largeImage => {\n        setLargeImage(largeImage);\n        toggleModal();\n    };\n\n    const handleOnLoadClick = () => {\n        scrollPageDown();\n        setLoading(true);\n        setPage(prev => prev + 1);\n    };\n\n    const toggleModal = () => setShowModal(!showModal);\n\n    const hideLoaderInModal = () => setLoading(false);\n\n    return (\n        <>\n            <ToastContainer autoClose={3000} />\n\n            <Searchbar onSubmit={handlerFormSubmit} />\n            {error && <NoResult text={error} />}\n            {loading && (\n                <Loader\n                    className=\"spinner\"\n                    type=\"Circles\"\n                    color=\"#00BFFF\"\n                    height={300}\n                    width={300}\n                />\n            )}\n            {images.length > 0 && !error && (\n                <ImageGallery images={images} onOpenModal={handleOpenModal} />\n            )}\n\n            {!loading && images.length > 0 && !error && (\n                <Button onClick={handleOnLoadClick} />\n            )}\n\n            {showModal && (\n                <Modal onClose={toggleModal}>\n                    {loading && (\n                        <Loader\n                            className=\"spinner\"\n                            type=\"Circles\"\n                            color=\"#00BFFF\"\n                            height={300}\n                            width={300}\n                        />\n                    )}\n                    <img\n                        src={largeImage.largeImageURL}\n                        alt={largeImage.tags}\n                        onLoad={hideLoaderInModal}\n                    />\n                </Modal>\n            )}\n        </>\n    );\n}\n","export default function scrollPageDown() {\n    window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n    });\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}